[project]
name = "datapack"
version = "0.0.1"
description = "enhanced document management for llm contextualization"
authors = ["Datapack <contact@datapack.ai>"]
license = "AGPL-3.0"
readme = "README.md"
packages = [{include = "datapack"}]
repository = "https://github.com/greyhaven-ai/datapack"

dependencies = [
    "pydantic==2.10.6",
    "pydantic-settings==2.7.1",
    "pydantic-ai==0.0.21",
    "ruff>=0.9.5",
    "mdp>=0.1.0",  # Markdown Data Package - core dependency
]
requires-python = ">=3.12,<3.13"

[project.optional-dependencies]
dev = [
    "pytest==8.3.4",
    "pytest-asyncio==0.25.2",
    "pytest-cov==6.0.0",
    "mypy==1.14.1",
    "ruff>=0.9.5",
]

# Format converters
converters = [
    "lxml>=4.9.0",  # For XML processing
    "pandas>=1.5.0",  # For CSV statistics
    "jsonschema>=4.17.0",  # For JSON validation
    "pyyaml>=6.0",  # For YAML processing
    "markdown>=3.4.0",  # For Markdown processing
    "python-frontmatter>=1.0.0",  # For frontmatter extraction
    "beautifulsoup4>=4.12.0",  # For HTML processing
    "sqlparse>=0.4.4",  # For SQL processing
    "mail-parser>=3.15.0",  # For email processing
]

# Document converters
documents = [
    "python-docx>=0.8.11",  # For DOCX processing
    "nbformat>=5.9.0",  # For Jupyter Notebook processing
    "nbconvert>=7.3.0",  # For Jupyter Notebook conversion
]

# Full installation with all features
full = [
    # Converters
    "lxml>=4.9.0",
    "pandas>=1.5.0",
    "jsonschema>=4.17.0",
    "pyyaml>=6.0",
    "markdown>=3.4.0",
    "python-frontmatter>=1.0.0",
    "beautifulsoup4>=4.12.0",
    "sqlparse>=0.4.4",
    "mail-parser>=3.15.0",
    # Document converters
    "python-docx>=0.8.11",
    "nbformat>=5.9.0",
    "nbconvert>=7.3.0",
    # PDF support
    "pypdf>=3.15.0",
    "pdfminer.six>=20220524",
    "pdf2image>=1.16.0",
]

# PDF support
pdf = [
    "pypdf>=3.15.0",
    "pdfminer.six>=20220524",
    "pdf2image>=1.16.0",
]

[project.scripts]
datapack = "datapack.cli:main"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=app --cov-report=term-missing"
asyncio_mode = "auto"

[tool.ruff]
# Fix without reporting on leftover violations
fix-only = true

# Enumerate all fixed violations
show-fixes = true

# Indent width (default: 4)
indent-width = 4

# Black (default: 88)
line-length = 88

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    "dist",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    "__pycache__",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Assume Python 3.12
target-version = "py312"

[tool.ruff.format]
# Use spaces instead of tabs
indent-style = "space"

# Use `\n` line endings for all files
line-ending = "lf"

# Set quote style for strings
quote-style = "preserve"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = ["D203", "E203", "E251", "E266", "E401", "E402", "E501", "F401", "F403"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TID", "TRY", "UP", "YTT"]

# unfixable = []

[tool.ruff.lint.isort]
combine-as-imports = true
from-first = false
no-sections = true
order-by-type = true

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10